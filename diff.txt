diff --git a/about/admin.py b/about/admin.py
index f5c1b22..09acc32 100644
--- a/about/admin.py
+++ b/about/admin.py
@@ -1,4 +1,5 @@
-from __future__ import unicode_literals
+# -*- coding: utf-8 -*-
+
 from django.contrib import admin
 from .models import About 
 
diff --git a/about/apps.py b/about/apps.py
index d6ed2ac..bb4ed58 100644
--- a/about/apps.py
+++ b/about/apps.py
@@ -1,5 +1,8 @@
+# -*- coding: utf-8 -*-
+
 from django.apps import AppConfig
 
 
 class AboutConfig(AppConfig):
-    name = 'about'
+	name = 'about'
+	verbose_name = u"О школе"
\ No newline at end of file
diff --git a/about/models.py b/about/models.py
index d5bc1cd..4ca564c 100644
--- a/about/models.py
+++ b/about/models.py
@@ -1,3 +1,5 @@
+# -*- coding: utf-8 -*-
+
 from __future__ import unicode_literals
 from django.db import models
 
@@ -5,9 +7,13 @@ def get_uploaded_file_name(instance, filename):
 	return "images/about/%s" % filename
 
 class About(models.Model):
-	title = models.CharField(verbose_name="Заголовок", max_length=100)
-	text = models.TextField(verbose_name="Текст", blank=True, null=True)
-	img = models.ImageField(upload_to=get_uploaded_file_name, verbose_name="Картинка", blank=True, null=True)
+	title = models.CharField(u"Заголовок", max_length=100)
+	text = models.TextField(u"Текст", blank=True, null=True)
+	img = models.ImageField(u"Картинка", upload_to=get_uploaded_file_name, blank=True, null=True)
+
+	updated = models.DateTimeField(u"Данные обновлены", auto_now=True, auto_now_add=False)
+	created = models.DateTimeField(u"Данные созданы", auto_now=False, auto_now_add=True)
 
-	updated = models.DateTimeField(verbose_name="Данные обновлены", auto_now=True, auto_now_add=False)
-	created = models.DateTimeField(verbose_name="Данные созданы", auto_now=False, auto_now_add=True)
\ No newline at end of file
+	class Meta:
+		verbose_name = u'О школе'
+		verbose_name_plural = u'О школе'
\ No newline at end of file
diff --git a/about/tests.py b/about/tests.py
deleted file mode 100644
index 7ce503c..0000000
--- a/about/tests.py
+++ /dev/null
@@ -1,3 +0,0 @@
-from django.test import TestCase
-
-# Create your tests here.
diff --git a/academy/apps.py b/academy/apps.py
index 9ec63b1..4f2286e 100644
--- a/academy/apps.py
+++ b/academy/apps.py
@@ -1,5 +1,8 @@
+# -*- coding: utf-8 -*-
+
 from django.apps import AppConfig
 
 
 class AcademyConfig(AppConfig):
-    name = 'academy'
+	name = 'academy'
+	verbose_name = u"Академия"
\ No newline at end of file
diff --git a/academy/models.py b/academy/models.py
index 622a679..ae6237b 100644
--- a/academy/models.py
+++ b/academy/models.py
@@ -1,15 +1,16 @@
-from __future__ import unicode_literals
+# -*- coding: utf-8 -*-
+
 from django.db import models
 
 def get_uploaded_file_name(instance, filename):
 	return "images/academy/%s" % filename
 
 class Academy(models.Model):
-	title = models.CharField(verbose_name="Заголовок", max_length=400)
-	description = models.TextField(verbose_name="Описание", blank=True, null=True)
-	ref_video = models.CharField(verbose_name="Видео", max_length=400, blank=True, null=True)
-	updated = models.DateTimeField(verbose_name="Данные обновлены", auto_now=True, auto_now_add=False)
-	created = models.DateTimeField(verbose_name="Данные созданы", auto_now=False, auto_now_add=True)
+	title = models.CharField(u"Заголовок", max_length=400)
+	description = models.TextField(u"Описание", blank=True, null=True)
+	ref_video = models.CharField(u"Видео", max_length=400, blank=True, null=True)
+	updated = models.DateTimeField(u"Данные обновлены", auto_now=True, auto_now_add=False)
+	created = models.DateTimeField(u"Данные созданы", auto_now=False, auto_now_add=True)
 
 	def __unicode__(self):
 		return self.title
@@ -17,12 +18,16 @@ class Academy(models.Model):
 	def __str__(self):
 		return self.title
 
+	class Meta:
+		verbose_name = u'Академия'
+		verbose_name_plural = u'Академия'
+
 class Section(models.Model):
-	title = models.CharField(verbose_name="Название раздела", max_length=400)
-	description = models.TextField(verbose_name="Описание", blank=True, null=True)
-	img = models.ImageField(upload_to=get_uploaded_file_name, verbose_name="Картинка", blank=True, null=True)
-	updated = models.DateTimeField(verbose_name="Данные обновлены", auto_now=True, auto_now_add=False)
-	created = models.DateTimeField(verbose_name="Данные созданы", auto_now=False, auto_now_add=True)
+	title = models.CharField(u"Название раздела", max_length=400)
+	description = models.TextField(u"Описание", blank=True, null=True)
+	img = models.ImageField(upload_to=get_uploaded_file_name, verbose_name=u"Картинка", blank=True, null=True)
+	updated = models.DateTimeField(u"Данные обновлены", auto_now=True, auto_now_add=False)
+	created = models.DateTimeField(u"Данные созданы", auto_now=False, auto_now_add=True)
 
 	class Meta:
 		ordering = ['created']
@@ -33,11 +38,15 @@ class Section(models.Model):
 	def __str__(self):
 		return self.title
 
+	class Meta:
+		verbose_name = u'Раздел академии'
+		verbose_name_plural = u'Раздел академии'
+
 class Subsection(models.Model):
-	title = models.CharField(verbose_name="Название подраздела", max_length=400)
-	section = models.ForeignKey(Section, verbose_name="Раздел")
-	updated = models.DateTimeField(verbose_name="Данные обновлены", auto_now=True, auto_now_add=False)
-	created = models.DateTimeField(verbose_name="Данные созданы", auto_now=False, auto_now_add=True)
+	title = models.CharField(u"Название подраздела", max_length=400)
+	section = models.ForeignKey(Section, verbose_name=u"Раздел")
+	updated = models.DateTimeField(u"Данные обновлены", auto_now=True, auto_now_add=False)
+	created = models.DateTimeField(u"Данные созданы", auto_now=False, auto_now_add=True)
 
 	class Meta:
 		ordering = ['created']
@@ -48,12 +57,16 @@ class Subsection(models.Model):
 	def __str__(self):
 		return self.title
 
+	class Meta:
+		verbose_name = u'Подраздел академии'
+		verbose_name_plural = u'Подраздел академии'
+
 class Video(models.Model):
-	title = models.CharField(verbose_name="Название видео", max_length=400)
-	ref_video = models.CharField(verbose_name="Ссылка на видео", max_length=400)
-	subsection = models.ForeignKey(Subsection, verbose_name="Подраздел")
-	updated = models.DateTimeField(verbose_name="Данные обновлены", auto_now=True, auto_now_add=False)
-	created = models.DateTimeField(verbose_name="Данные созданы", auto_now=False, auto_now_add=True)
+	title = models.CharField(u"Название видео", max_length=400)
+	ref_video = models.CharField(u"Ссылка на видео", max_length=400)
+	subsection = models.ForeignKey(Subsection, verbose_name=u"Подраздел")
+	updated = models.DateTimeField(u"Данные обновлены", auto_now=True, auto_now_add=False)
+	created = models.DateTimeField(u"Данные созданы", auto_now=False, auto_now_add=True)
 
 	class Meta:
 		ordering = ['created']
@@ -62,4 +75,8 @@ class Video(models.Model):
 		return self.title
 
 	def __str__(self):
-		return self.title
\ No newline at end of file
+		return self.title
+
+	class Meta:
+		verbose_name = u'Видео'
+		verbose_name_plural = u'Видео'
\ No newline at end of file
diff --git a/academy/tests.py b/academy/tests.py
deleted file mode 100644
index 7ce503c..0000000
--- a/academy/tests.py
+++ /dev/null
@@ -1,3 +0,0 @@
-from django.test import TestCase
-
-# Create your tests here.
diff --git a/cdr/settings.py b/cdr/settings.py
index 443824b..53fbc69 100644
--- a/cdr/settings.py
+++ b/cdr/settings.py
@@ -22,20 +22,20 @@ INSTALLED_APPS = [
     'django.contrib.sitemaps',
     'transliterate',
     'sitetree',
-    'slider',
-    'news',
-    'what_you_get',
-    'trainers',
-    'filials',
-    'gallery',
-    'country',
-    'master',
-    'citations',
-    'about',
-    'new_student',
-    'subscribers',
-    'academy',
-    'history_articles',
+    'slider.apps.SliderConfig',
+    'news.apps.NewsConfig',
+    'what_you_get.apps.WhatYouGetConfig',
+    'trainers.apps.TrainersConfig',
+    'filials.apps.FilialsConfig',
+    'gallery.apps.GalleryConfig',
+    'country.apps.CountryConfig',
+    'master.apps.MasterConfig',
+    'citations.apps.CitationsConfig',
+    'about.apps.AboutConfig',
+    'new_student.apps.NewStudentConfig',
+    'subscribers.apps.SubscribersConfig',
+    'academy.apps.AcademyConfig',
+    'history_articles.apps.HistoryArticlesConfig',
     'django.contrib.admin',
 ]
 
@@ -128,4 +128,5 @@ MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'media')
 EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
 EMAIL_USE_TLS = True
 
-from settings_local import *
\ No newline at end of file
+
+from .settings_local import *
diff --git a/citations/admin.py b/citations/admin.py
index 7fbf0cc..c1e326e 100644
--- a/citations/admin.py
+++ b/citations/admin.py
@@ -1,4 +1,5 @@
-from __future__ import unicode_literals
+# -*- coding: utf-8 -*-
+
 from django.contrib import admin
 from .models import Citation 
 
diff --git a/citations/apps.py b/citations/apps.py
index c4e1026..977827f 100644
--- a/citations/apps.py
+++ b/citations/apps.py
@@ -1,5 +1,8 @@
+# -*- coding: utf-8 -*-
+
 from django.apps import AppConfig
 
 
 class CitationsConfig(AppConfig):
-    name = 'citations'
+	name = 'citations'
+	verbose_name = u"Цитаты"
\ No newline at end of file
diff --git a/citations/models.py b/citations/models.py
index d2be378..5b2ff67 100644
--- a/citations/models.py
+++ b/citations/models.py
@@ -1,14 +1,16 @@
-from __future__ import unicode_literals
+# -*- coding: utf-8 -*-
+
 from django.db import models
 from datetime import datetime
 from master.models import Master
 
 class Citation(models.Model):
-	text = models.TextField(verbose_name="Текст цитаты")
-	master = models.ForeignKey(Master, verbose_name="Автор")
+	text = models.TextField(u"Текст цитаты")
+	master = models.ForeignKey(Master, verbose_name=u"Автор")
 
-	updated = models.DateTimeField(verbose_name="Данные обновлены", auto_now=True, auto_now_add=False)
-	created = models.DateTimeField(verbose_name="Данные созданы", auto_now=False, auto_now_add=True)
+	updated = models.DateTimeField(u"Данные обновлены", auto_now=True, auto_now_add=False)
+	created = models.DateTimeField(u"Данные созданы", auto_now=False, auto_now_add=True)
 
-	def __unicode__(self):
-		return self.name
\ No newline at end of file
+	class Meta:
+		verbose_name = u'Цитата'
+		verbose_name_plural = u'Цитаты'
\ No newline at end of file
diff --git a/citations/tests.py b/citations/tests.py
deleted file mode 100644
index 7ce503c..0000000
--- a/citations/tests.py
+++ /dev/null
@@ -1,3 +0,0 @@
-from django.test import TestCase
-
-# Create your tests here.
diff --git a/country/admin.py b/country/admin.py
index cecb8cb..1f8b495 100644
--- a/country/admin.py
+++ b/country/admin.py
@@ -1,4 +1,5 @@
-from __future__ import unicode_literals
+# -*- coding: utf-8 -*-
+
 from django.contrib import admin
 from .models import Country 
 
diff --git a/country/apps.py b/country/apps.py
index dd62c85..86d2013 100644
--- a/country/apps.py
+++ b/country/apps.py
@@ -1,5 +1,8 @@
+# -*- coding: utf-8 -*-
+
 from django.apps import AppConfig
 
 
 class CountryConfig(AppConfig):
-    name = 'country'
+	name = 'country'
+	verbose_name = u'Страны'
\ No newline at end of file
diff --git a/country/models.py b/country/models.py
index 7a3c5f7..f429c3b 100644
--- a/country/models.py
+++ b/country/models.py
@@ -1,4 +1,5 @@
-from __future__ import unicode_literals
+# -*- coding: utf-8 -*-
+
 from django.db import models
 from datetime import datetime
 
@@ -6,14 +7,18 @@ def get_uploaded_file_name(instance, filename):
 	return "images/country_flag/%s" % filename
 
 class Country(models.Model):
-	name = models.CharField(verbose_name="Название", max_length=400)
-	logo = models.ImageField(upload_to=get_uploaded_file_name, verbose_name="Флаг", blank=True, null=True)
+	name = models.CharField(u"Название", max_length=400)
+	logo = models.ImageField(upload_to=get_uploaded_file_name, verbose_name=u"Флаг", blank=True, null=True)
 
-	updated = models.DateTimeField(verbose_name="Данные обновлены", auto_now=True, auto_now_add=False)
-	created = models.DateTimeField(verbose_name="Данные созданы", auto_now=False, auto_now_add=True)
+	updated = models.DateTimeField(u"Данные обновлены", auto_now=True, auto_now_add=False)
+	created = models.DateTimeField(u"Данные созданы", auto_now=False, auto_now_add=True)
 
 	def __unicode__(self):
 		return self.name
 
 	def __str__(self):
-		return self.name
\ No newline at end of file
+		return self.name
+
+	class Meta:
+		verbose_name = u'Страна'
+		verbose_name_plural = u'Страны'
\ No newline at end of file
diff --git a/country/tests.py b/country/tests.py
deleted file mode 100644
index 7ce503c..0000000
--- a/country/tests.py
+++ /dev/null
@@ -1,3 +0,0 @@
-from django.test import TestCase
-
-# Create your tests here.
diff --git a/filials/admin.py b/filials/admin.py
index 884a293..696dfd8 100644
--- a/filials/admin.py
+++ b/filials/admin.py
@@ -1,3 +1,5 @@
+# -*- coding: utf-8 -*-
+
 from django.contrib import admin
 
 from .models import Filial
diff --git a/filials/apps.py b/filials/apps.py
index a35966e..ee566a3 100644
--- a/filials/apps.py
+++ b/filials/apps.py
@@ -1,5 +1,8 @@
+# -*- coding: utf-8 -*-
+
 from django.apps import AppConfig
 
 
 class FilialsConfig(AppConfig):
-    name = 'filials'
+	name = 'filials'
+	verbose_name = u'Филиалы'
\ No newline at end of file
diff --git a/filials/models.py b/filials/models.py
index b06116e..53018fe 100644
--- a/filials/models.py
+++ b/filials/models.py
@@ -1,25 +1,26 @@
-from __future__ import unicode_literals
+# -*- coding: utf-8 -*-
+
 from django.db import models
 
 from trainers.models import Trainer
 
 class Filial(models.Model):
 	CITIES = (
-		('Rostov', 'Ростов-на-Дону'),
-		('Cimlyansk', 'Цимлянск'),
-		('Shahty', 'Шахты'),
+		('Rostov', u'Ростов-на-Дону'),
+		('Cimlyansk', u'Цимлянск'),
+		('Shahty', u'Шахты'),
 	)
-	city = models.CharField(verbose_name="Город", max_length=300, choices=CITIES, default='Rostov')
-	address = models.CharField(verbose_name="Адрес", max_length=300, blank=True, null=True)
-	map_coord_x = models.FloatField(verbose_name="Координата х на карте", blank=True, null=True)
-	map_coord_y = models.FloatField(verbose_name="Координата у на карте", blank=True, null=True)
-	email = models.CharField(verbose_name="E-mail", max_length=300, blank=True, null=True)
-	phone = models.CharField(verbose_name="Телефон", max_length=300)
-	timetable_adults = models.TextField(verbose_name="Расписание (взрослые)", blank=True, null=True)
-	timetable_children = models.TextField(verbose_name="Расписание (дети)", blank=True, null=True)
-	trainer = models.ManyToManyField(Trainer, verbose_name="Тренер", related_name="filial", related_query_name="filial", blank=True)
-	updated = models.DateTimeField(verbose_name="Данные обновлены", auto_now=True, auto_now_add=False)
-	created = models.DateTimeField(verbose_name="Данные созданы", auto_now=False, auto_now_add=True)
+	city = models.CharField(u"Город", max_length=300, choices=CITIES, default='Rostov')
+	address = models.CharField(u"Адрес", max_length=300, blank=True, null=True)
+	map_coord_x = models.FloatField(u"Координата х на карте", blank=True, null=True)
+	map_coord_y = models.FloatField(u"Координата у на карте", blank=True, null=True)
+	email = models.CharField(u"E-mail", max_length=300, blank=True, null=True)
+	phone = models.CharField(u"Телефон", max_length=300)
+	timetable_adults = models.TextField(u"Расписание (взрослые)", blank=True, null=True)
+	timetable_children = models.TextField(u"Расписание (дети)", blank=True, null=True)
+	trainer = models.ManyToManyField(Trainer, verbose_name=u"Тренер", related_name="filial", related_query_name="filial", blank=True)
+	updated = models.DateTimeField(u"Данные обновлены", auto_now=True, auto_now_add=False)
+	created = models.DateTimeField(u"Данные созданы", auto_now=False, auto_now_add=True)
 
 	class Meta:
 		ordering = ['id',]
@@ -28,4 +29,8 @@ class Filial(models.Model):
 		return self.city
 
 	def __str__(self):
-		return self.city
\ No newline at end of file
+		return self.city
+
+	class Meta:
+		verbose_name = u'Филиал'
+		verbose_name_plural = u'Филиалы'
\ No newline at end of file
diff --git a/filials/tests.py b/filials/tests.py
deleted file mode 100644
index 7ce503c..0000000
--- a/filials/tests.py
+++ /dev/null
@@ -1,3 +0,0 @@
-from django.test import TestCase
-
-# Create your tests here.
diff --git a/gallery/admin.py b/gallery/admin.py
index 06e0a83..9e569b0 100644
--- a/gallery/admin.py
+++ b/gallery/admin.py
@@ -1,3 +1,5 @@
+# -*- coding: utf-8 -*-
+
 from django.contrib import admin
 
 from .models import Photo, Album, Category
diff --git a/gallery/apps.py b/gallery/apps.py
index 07f5d13..6ab14e7 100644
--- a/gallery/apps.py
+++ b/gallery/apps.py
@@ -1,5 +1,8 @@
+# -*- coding: utf-8 -*-
+
 from django.apps import AppConfig
 
 
 class GalleryConfig(AppConfig):
-    name = 'gallery'
+	name = 'gallery'
+	verbose_name = u'Галерея'
\ No newline at end of file
diff --git a/gallery/models.py b/gallery/models.py
index 401c321..17cd99b 100644
--- a/gallery/models.py
+++ b/gallery/models.py
@@ -1,4 +1,5 @@
-from __future__ import unicode_literals
+# -*- coding: utf-8 -*-
+
 from django.db import models
 from django.db.models.signals import pre_save
 from django.core.urlresolvers import reverse
@@ -10,7 +11,7 @@ def get_uploaded_file_name(instance, filename):
 	return "gallery/%s" % filename
 
 class Category(models.Model):
-	title = models.CharField(verbose_name="Название категории", max_length=400)
+	title = models.CharField(u"Название категории", max_length=400)
 
 	class Meta:
 		ordering = ['title',]
@@ -21,14 +22,18 @@ class Category(models.Model):
 	def __str__(self):
 		return self.title
 
+	class Meta:
+		verbose_name = u'Тип альбомов'
+		verbose_name_plural = u'Тип альбомов'
+
 class Album(models.Model):
-	title = models.CharField(verbose_name="Название альбома", max_length=400)
+	title = models.CharField(u"Название альбома", max_length=400)
 	slug = models.SlugField(unique=True, blank=True, null=True)
-	cover = models.ImageField(upload_to=get_uploaded_file_name, verbose_name="Обложка", blank=True, null=True)
-	description = models.TextField(verbose_name="Описание альбома", blank=True, null=True)
+	cover = models.ImageField(u"Обложка", upload_to=get_uploaded_file_name, blank=True, null=True)
+	description = models.TextField(u"Описание альбома", blank=True, null=True)
 	category = models.ForeignKey(Category)
-	updated = models.DateTimeField(verbose_name="Данные обновлены", auto_now=True, auto_now_add=False)
-	created = models.DateTimeField(verbose_name="Данные созданы", auto_now=False, auto_now_add=True)
+	updated = models.DateTimeField(u"Данные обновлены", auto_now=True, auto_now_add=False)
+	created = models.DateTimeField(u"Данные созданы", auto_now=False, auto_now_add=True)
 
 	class Meta:
 		ordering = ['updated', 'created']
@@ -43,13 +48,17 @@ class Album(models.Model):
 	def get_absolute_url(self):
 		return ('album_detail', None, {'symbol_code': self.slug})
 
+	class Meta:
+		verbose_name = u'Альбом'
+		verbose_name_plural = u'Альбомы'
+
 class Photo(models.Model):
-	title = models.CharField(verbose_name="Заголовок фото", max_length=400, blank=True, null=True)
-	comment = models.TextField(verbose_name="Комментарий к фотографии", blank=True, null=True)
-	img = models.ImageField(upload_to=get_uploaded_file_name, verbose_name="Картинка")
+	title = models.CharField(u"Заголовок фото", max_length=400, blank=True, null=True)
+	comment = models.TextField(u"Комментарий к фотографии", blank=True, null=True)
+	img = models.ImageField(u"Картинка", upload_to=get_uploaded_file_name)
 	album = models.ForeignKey(Album)
-	updated = models.DateTimeField(verbose_name="Данные обновлены", auto_now=True, auto_now_add=False)
-	created = models.DateTimeField(verbose_name="Данные созданы", auto_now=False, auto_now_add=True)
+	updated = models.DateTimeField(u"Данные обновлены", auto_now=True, auto_now_add=False)
+	created = models.DateTimeField(u"Данные созданы", auto_now=False, auto_now_add=True)
 
 	class Meta:
 		ordering = ['updated', 'created']
@@ -64,6 +73,10 @@ class Photo(models.Model):
 	def get_absolute_url(self):
 		return ('photoy_detail', None, {'symbol_code': self.slug})
 
+	class Meta:
+		verbose_name = u'Фото'
+		verbose_name_plural = u'Фото'
+
 def pre_save_post(sender, instance, *args, **kwargs):
 	if instance.slug:
 		slug_init = instance.slug
diff --git a/gallery/tests.py b/gallery/tests.py
deleted file mode 100644
index 7ce503c..0000000
--- a/gallery/tests.py
+++ /dev/null
@@ -1,3 +0,0 @@
-from django.test import TestCase
-
-# Create your tests here.
diff --git a/history_articles/admin.py b/history_articles/admin.py
index 026e22a..a551a9d 100644
--- a/history_articles/admin.py
+++ b/history_articles/admin.py
@@ -1,3 +1,5 @@
+# -*- coding: utf-8 -*-
+
 from django.contrib import admin
 
 from .models import Article
@@ -9,4 +11,4 @@ class ArticleAdmin(admin.ModelAdmin):
 	class Meta:
 		model = Article
 
-admin.site.register(Article, ArticleAdmin)
+admin.site.register(Article, ArticleAdmin)
\ No newline at end of file
diff --git a/history_articles/apps.py b/history_articles/apps.py
index 697fa1c..3ed7e66 100644
--- a/history_articles/apps.py
+++ b/history_articles/apps.py
@@ -1,5 +1,8 @@
+# -*- coding: utf-8 -*-
+
 from django.apps import AppConfig
 
 
 class HistoryArticlesConfig(AppConfig):
-    name = 'history_articles'
+	name = 'history_articles'
+	verbose_name = u'Исторические статьи'
\ No newline at end of file
diff --git a/history_articles/models.py b/history_articles/models.py
index 82ae9af..4da8c87 100644
--- a/history_articles/models.py
+++ b/history_articles/models.py
@@ -1,4 +1,5 @@
-from __future__ import unicode_literals
+# -*- coding: utf-8 -*-
+
 from django.db import models
 from datetime import datetime
 
@@ -6,16 +7,20 @@ def get_uploaded_file_name(instance, filename):
 	return "images/history/%s" % filename
 
 class Article(models.Model):
-	title = models.CharField(verbose_name="Название", max_length=400)
-	photo = models.ImageField(upload_to=get_uploaded_file_name, verbose_name="Фото", blank=True, null=True)
-	description = models.TextField(verbose_name="Описание", blank=True, null=True)
-	period = models.CharField(verbose_name="Период", max_length=400, blank=True, null=True)
+	title = models.CharField(u"Название", max_length=400)
+	photo = models.ImageField(u"Фото", upload_to=get_uploaded_file_name, blank=True, null=True)
+	description = models.TextField(u"Описание", blank=True, null=True)
+	period = models.CharField(u"Период", max_length=400, blank=True, null=True)
 
-	updated = models.DateTimeField(verbose_name="Данные обновлены", auto_now=True, auto_now_add=False)
-	created = models.DateTimeField(verbose_name="Данные созданы", auto_now=False, auto_now_add=True)
+	updated = models.DateTimeField(u"Данные обновлены", auto_now=True, auto_now_add=False)
+	created = models.DateTimeField(u"Данные созданы", auto_now=False, auto_now_add=True)
 
 	def __unicode__(self):
 		return self.title
 
 	def __str__(self):
-		return self.title
\ No newline at end of file
+		return self.title
+
+	class Meta:
+		verbose_name = u'Историческая статья'
+		verbose_name_plural = u'Историческая статьи'
\ No newline at end of file
diff --git a/history_articles/tests.py b/history_articles/tests.py
deleted file mode 100644
index 7ce503c..0000000
--- a/history_articles/tests.py
+++ /dev/null
@@ -1,3 +0,0 @@
-from django.test import TestCase
-
-# Create your tests here.
diff --git a/master/admin.py b/master/admin.py
index 1685754..cf6dc63 100644
--- a/master/admin.py
+++ b/master/admin.py
@@ -1,4 +1,5 @@
-from __future__ import unicode_literals
+# -*- coding: utf-8 -*-
+
 from django.contrib import admin
 from .models import Master 
 
diff --git a/master/apps.py b/master/apps.py
index 328c2c4..3f8141c 100644
--- a/master/apps.py
+++ b/master/apps.py
@@ -1,5 +1,8 @@
+# -*- coding: utf-8 -*-
+
 from django.apps import AppConfig
 
 
 class MasterConfig(AppConfig):
-    name = 'master'
+	name = 'master'
+	verbose_name = u'Мастера'
\ No newline at end of file
diff --git a/master/models.py b/master/models.py
index 4260c56..1a5a81b 100644
--- a/master/models.py
+++ b/master/models.py
@@ -1,4 +1,5 @@
-from __future__ import unicode_literals
+# -*- coding: utf-8 -*-
+
 from django.db import models
 from datetime import datetime
 from country.models import Country
@@ -7,20 +8,24 @@ def get_uploaded_file_name(instance, filename):
 	return "images/masters/%s" % filename
 
 class Master(models.Model):
-	name = models.CharField(verbose_name="Имя", max_length=400)
-	apelido = models.CharField(verbose_name="Апелиду", max_length=400, blank=True, null=True)
-	country = models.ForeignKey(Country, verbose_name="Страна", blank=True, null=True)
-	photo = models.ImageField(upload_to=get_uploaded_file_name, verbose_name="Фото", blank=True, null=True)
-	cordao = models.CharField(verbose_name="Шнур", max_length=400, blank=True, null=True)
-	biography = models.TextField(verbose_name="Биография", blank=True, null=True)
-	date_birth = models.DateField(verbose_name="Дата рожения", blank=True, null=True)
-	date_death = models.DateField(verbose_name="Дата смерти", blank=True, null=True)
+	name = models.CharField(u"Имя", max_length=400)
+	apelido = models.CharField(u"Апелиду", max_length=400, blank=True, null=True)
+	country = models.ForeignKey(Country, verbose_name=u"Страна", blank=True, null=True)
+	photo = models.ImageField(u"Фото", upload_to=get_uploaded_file_name, blank=True, null=True)
+	cordao = models.CharField(u"Шнур", max_length=400, blank=True, null=True)
+	biography = models.TextField(u"Биография", blank=True, null=True)
+	date_birth = models.DateField(u"Дата рожения", blank=True, null=True)
+	date_death = models.DateField(u"Дата смерти", blank=True, null=True)
 
-	updated = models.DateTimeField(verbose_name="Данные обновлены", auto_now=True, auto_now_add=False)
-	created = models.DateTimeField(verbose_name="Данные созданы", auto_now=False, auto_now_add=True)
+	updated = models.DateTimeField(u"Данные обновлены", auto_now=True, auto_now_add=False)
+	created = models.DateTimeField(u"Данные созданы", auto_now=False, auto_now_add=True)
 
 	def __unicode__(self):
 		return self.name
 
 	def __str__(self):
-		return self.apelido or self.name
\ No newline at end of file
+		return self.apelido or self.name
+
+	class Meta:
+		verbose_name = u'Мастер'
+		verbose_name_plural = u'Мастера'
\ No newline at end of file
diff --git a/master/tests.py b/master/tests.py
deleted file mode 100644
index 7ce503c..0000000
--- a/master/tests.py
+++ /dev/null
@@ -1,3 +0,0 @@
-from django.test import TestCase
-
-# Create your tests here.
diff --git a/new_student/admin.py b/new_student/admin.py
index decb1b7..b750f22 100644
--- a/new_student/admin.py
+++ b/new_student/admin.py
@@ -1,3 +1,5 @@
+# -*- coding: utf-8 -*-
+
 from django.contrib import admin
 
 from .models import NewStudent
diff --git a/new_student/apps.py b/new_student/apps.py
index e931a14..d20932e 100644
--- a/new_student/apps.py
+++ b/new_student/apps.py
@@ -1,5 +1,8 @@
+# -*- coding: utf-8 -*-
+
 from django.apps import AppConfig
 
 
 class NewStudentConfig(AppConfig):
-    name = 'new_student'
+	name = 'new_student'
+	verbose_name = u'Форма записи нового ученика'
\ No newline at end of file
diff --git a/new_student/models.py b/new_student/models.py
index 5948d1b..bbfc84f 100644
--- a/new_student/models.py
+++ b/new_student/models.py
@@ -1,17 +1,22 @@
-from __future__ import unicode_literals
+# -*- coding: utf-8 -*-
+
 from django.db import models
 
 from filials.models import Filial
 
 class NewStudent(models.Model):
-	name = models.CharField(verbose_name="ФИО", max_length=400)
-	phone = models.CharField(verbose_name="Номер телефона", max_length=400)
-	filial = models.ForeignKey(Filial, verbose_name="Филиал")
-	updated = models.DateTimeField(verbose_name="Данные обновлены", auto_now=True, auto_now_add=False)
-	created = models.DateTimeField(verbose_name="Данные созданы", auto_now=False, auto_now_add=True)
+	name = models.CharField(u"ФИО", max_length=400)
+	phone = models.CharField(u"Номер телефона", max_length=400)
+	filial = models.ForeignKey(Filial, verbose_name=u"Филиал")
+	updated = models.DateTimeField(u"Данные обновлены", auto_now=True, auto_now_add=False)
+	created = models.DateTimeField(u"Данные созданы", auto_now=False, auto_now_add=True)
 
 	def __unicode__(self):
 		return self.name
 
 	def __str__(self):
-		return self.name
\ No newline at end of file
+		return self.name
+
+	class Meta:
+		verbose_name = u'Запись нового ученика'
+		verbose_name_plural = u'Записи новых учеников'
\ No newline at end of file
diff --git a/new_student/tests.py b/new_student/tests.py
deleted file mode 100644
index 7ce503c..0000000
--- a/new_student/tests.py
+++ /dev/null
@@ -1,3 +0,0 @@
-from django.test import TestCase
-
-# Create your tests here.
diff --git a/news/admin.py b/news/admin.py
index 9cc2c0b..c915648 100644
--- a/news/admin.py
+++ b/news/admin.py
@@ -1,3 +1,5 @@
+# -*- coding: utf-8 -*-
+
 from django.contrib import admin
 from .models import New
 
@@ -9,4 +11,4 @@ class NewAdmin(admin.ModelAdmin):
 	list_editable = ['title', 'slug']
 	list_filter = ['updated', 'created']
 
-admin.site.register(New, NewAdmin)
+admin.site.register(New, NewAdmin)
\ No newline at end of file
diff --git a/news/apps.py b/news/apps.py
index 5a7b92d..1156138 100644
--- a/news/apps.py
+++ b/news/apps.py
@@ -1,5 +1,8 @@
+# -*- coding: utf-8 -*-
+
 from django.apps import AppConfig
 
 
 class NewsConfig(AppConfig):
-    name = 'news'
+	name = 'news'
+	verbose_name = u'Новости'
\ No newline at end of file
diff --git a/news/models.py b/news/models.py
index 98397cf..2f8d1be 100644
--- a/news/models.py
+++ b/news/models.py
@@ -1,4 +1,5 @@
-from __future__ import unicode_literals
+# -*- coding: utf-8 -*-
+
 from django.db import models
 from django.db.models.signals import pre_save
 from django.core.urlresolvers import reverse
@@ -10,13 +11,13 @@ def get_uploaded_file_name(instance, filename):
 	return "news/%s" % filename
 
 class New(models.Model):
-	title = models.CharField(verbose_name="Название", max_length=100)
+	title = models.CharField(u"Название", max_length=100)
 	slug = models.SlugField(unique=True, blank=True, null=True)
-	preview_text = models.TextField(verbose_name="Описание анонса")
-	detail_text = models.TextField(verbose_name="Детальное описание")
-	image = models.ImageField(upload_to=get_uploaded_file_name, verbose_name="Картинка", blank=True, null=True)
-	updated = models.DateTimeField(verbose_name="Данные обновлены", auto_now=True, auto_now_add=False)
-	created = models.DateTimeField(verbose_name="Данные созданы", auto_now=False, auto_now_add=True)
+	preview_text = models.TextField(u"Описание анонса")
+	detail_text = models.TextField(u"Детальное описание")
+	image = models.ImageField(u"Картинка", upload_to=get_uploaded_file_name, blank=True, null=True)
+	updated = models.DateTimeField(u"Данные обновлены", auto_now=True, auto_now_add=False)
+	created = models.DateTimeField(u"Данные созданы", auto_now=False, auto_now_add=True)
 
 
 	def __str__(self):
@@ -27,6 +28,8 @@ class New(models.Model):
 
 	class Meta:
 		ordering = ['-updated', '-created']
+		verbose_name = u'Новость'
+		verbose_name_plural = u'Новости'
 
 def pre_save_post(sender, instance, *args, **kwargs):
 	if instance.slug:
diff --git a/news/tests.py b/news/tests.py
deleted file mode 100644
index 7ce503c..0000000
--- a/news/tests.py
+++ /dev/null
@@ -1,3 +0,0 @@
-from django.test import TestCase
-
-# Create your tests here.
diff --git a/slider/admin.py b/slider/admin.py
index f2d47e9..b938c88 100644
--- a/slider/admin.py
+++ b/slider/admin.py
@@ -1,3 +1,5 @@
+# -*- coding: utf-8 -*-
+
 from django.contrib import admin
 from .models import Slider
 
diff --git a/slider/apps.py b/slider/apps.py
index 8c65329..2fdbe84 100644
--- a/slider/apps.py
+++ b/slider/apps.py
@@ -1,7 +1,8 @@
-from __future__ import unicode_literals
+# -*- coding: utf-8 -*-
 
 from django.apps import AppConfig
 
 
 class SliderConfig(AppConfig):
-    name = 'slider'
+	name = 'slider'
+	verbose_name = u'Слайдер'
\ No newline at end of file
diff --git a/slider/models.py b/slider/models.py
index a5c3b56..3e5d229 100644
--- a/slider/models.py
+++ b/slider/models.py
@@ -1,22 +1,25 @@
-from __future__ import unicode_literals
+# -*- coding: utf-8 -*-
+
 from django.db import models
 
 def get_uploaded_file_name(instance, filename):
 	return "images/slider/%s" % filename
 
 class Slider(models.Model):
-	name = models.CharField(verbose_name="Название", max_length=30, blank=True, null=True)
-	is_main = models.BooleanField(verbose_name="Главный слайд", default=False)
-	img = models.ImageField(upload_to=get_uploaded_file_name, verbose_name="Картинка")
-	title_h1 = models.CharField(verbose_name="Главный заголовок", max_length=30, blank=True, null=True)
-	title_h2 = models.CharField(verbose_name="Заголовок второго уровня", max_length=50, blank=True, null=True)
-	title_btn = models.CharField(verbose_name="Название кнопки", max_length=10, blank=True, null=True)
-	href_btn = models.CharField(verbose_name="Ссылка кнопки", max_length=40, blank=True, null=True)
-	updated = models.DateTimeField(verbose_name="Данные обновлены", auto_now=True, auto_now_add=False)
-	created = models.DateTimeField(verbose_name="Данные созданы", auto_now=False, auto_now_add=True)
+	name = models.CharField(u"Название", max_length=30, blank=True, null=True)
+	is_main = models.BooleanField(u"Главный слайд", default=False)
+	img = models.ImageField(u"Картинка", upload_to=get_uploaded_file_name)
+	title_h1 = models.CharField(u"Главный заголовок", max_length=30, blank=True, null=True)
+	title_h2 = models.CharField(u"Заголовок второго уровня", max_length=50, blank=True, null=True)
+	title_btn = models.CharField(u"Название кнопки", max_length=10, blank=True, null=True)
+	href_btn = models.CharField(u"Ссылка кнопки", max_length=40, blank=True, null=True)
+	updated = models.DateTimeField(u"Данные обновлены", auto_now=True, auto_now_add=False)
+	created = models.DateTimeField(u"Данные созданы", auto_now=False, auto_now_add=True)
 
 	def __str__(self):
 		return self.name
 
 	class Meta:
-		ordering = ['-updated', '-created']
\ No newline at end of file
+		ordering = ['-updated', '-created']
+		verbose_name = u'Слайдер'
+		verbose_name_plural = u'Слайдеры'
\ No newline at end of file
diff --git a/slider/tests.py b/slider/tests.py
deleted file mode 100644
index 7ce503c..0000000
--- a/slider/tests.py
+++ /dev/null
@@ -1,3 +0,0 @@
-from django.test import TestCase
-
-# Create your tests here.
diff --git a/subscribers/admin.py b/subscribers/admin.py
index 2bd704b..e4c585c 100644
--- a/subscribers/admin.py
+++ b/subscribers/admin.py
@@ -1,3 +1,5 @@
+# -*- coding: utf-8 -*-
+
 from django.contrib import admin
 
 from .models import Subscriber
diff --git a/subscribers/apps.py b/subscribers/apps.py
index 3a92b1a..a9f760c 100644
--- a/subscribers/apps.py
+++ b/subscribers/apps.py
@@ -1,5 +1,8 @@
+# -*- coding: utf-8 -*-
+
 from django.apps import AppConfig
 
 
 class SubscribersConfig(AppConfig):
-    name = 'subscribers'
+	name = 'subscribers'
+	verbose_name = u'Подписчики'
\ No newline at end of file
diff --git a/subscribers/models.py b/subscribers/models.py
index 496df2a..6ff8bbd 100644
--- a/subscribers/models.py
+++ b/subscribers/models.py
@@ -1,13 +1,18 @@
-from __future__ import unicode_literals
+# -*- coding: utf-8 -*-
+
 from django.db import models
 
 class Subscriber(models.Model):
-	email = models.EmailField (verbose_name="E-mail", max_length=400)
-	updated = models.DateTimeField(verbose_name="Данные обновлены", auto_now=True, auto_now_add=False)
-	created = models.DateTimeField(verbose_name="Данные созданы", auto_now=False, auto_now_add=True)
+	email = models.EmailField (u"E-mail", max_length=400)
+	updated = models.DateTimeField(u"Данные обновлены", auto_now=True, auto_now_add=False)
+	created = models.DateTimeField(u"Данные созданы", auto_now=False, auto_now_add=True)
 
 	def __unicode__(self):
 		return self.email
 
 	def __str__(self):
-		return self.email
\ No newline at end of file
+		return self.email
+
+	class Meta:
+		verbose_name = u'Подписчик'
+		verbose_name_plural = u'Подписчики'
\ No newline at end of file
diff --git a/subscribers/tests.py b/subscribers/tests.py
deleted file mode 100644
index 7ce503c..0000000
--- a/subscribers/tests.py
+++ /dev/null
@@ -1,3 +0,0 @@
-from django.test import TestCase
-
-# Create your tests here.
diff --git a/trainers/admin.py b/trainers/admin.py
index 03795bf..ea5f318 100644
--- a/trainers/admin.py
+++ b/trainers/admin.py
@@ -1,3 +1,5 @@
+# -*- coding: utf-8 -*-
+
 from django.contrib import admin
 from .models import Trainer
 
diff --git a/trainers/apps.py b/trainers/apps.py
index c164766..e243020 100644
--- a/trainers/apps.py
+++ b/trainers/apps.py
@@ -1,5 +1,8 @@
+# -*- coding: utf-8 -*-
+
 from django.apps import AppConfig
 
 
 class TrainersConfig(AppConfig):
-    name = 'trainers'
+	name = 'trainers'
+	verbose_name = u'Инструктора'
\ No newline at end of file
diff --git a/trainers/models.py b/trainers/models.py
index c610615..9ab3ff8 100644
--- a/trainers/models.py
+++ b/trainers/models.py
@@ -1,17 +1,22 @@
-from __future__ import unicode_literals
+# -*- coding: utf-8 -*-
+
 from django.db import models
 
 def get_uploaded_file_name(instance, filename):
 	return "trainers/%s" % filename
 
 class Trainer(models.Model):
-	name = models.CharField(verbose_name="Имя", max_length=200)
-	apelido = models.CharField(verbose_name="Апелиду", max_length=200, blank=True, null=True)
-	status = models.CharField(verbose_name="Статус", max_length=500, blank=True, null=True)
-	photo = models.ImageField(verbose_name="Фото", upload_to=get_uploaded_file_name, blank=True, null=True)
-	biography = models.TextField(verbose_name="Биография", blank=True, null=True)
-	updated = models.DateTimeField(verbose_name="Данные обновлены", auto_now=True, auto_now_add=False)
-	created = models.DateTimeField(verbose_name="Данные созданы", auto_now=False, auto_now_add=True)
+	name = models.CharField(u"Имя", max_length=200)
+	apelido = models.CharField(u"Апелиду", max_length=200, blank=True, null=True)
+	status = models.CharField(u"Статус", max_length=500, blank=True, null=True)
+	photo = models.ImageField(u"Фото", upload_to=get_uploaded_file_name, blank=True, null=True)
+	biography = models.TextField(u"Биография", blank=True, null=True)
+	updated = models.DateTimeField(u"Данные обновлены", auto_now=True, auto_now_add=False)
+	created = models.DateTimeField(u"Данные созданы", auto_now=False, auto_now_add=True)
 
 	def __str__(self):
-		return self.apelido or self.name
\ No newline at end of file
+		return self.apelido or self.name
+
+	class Meta:
+		verbose_name = u'Инструктора'
+		verbose_name_plural = u'Инструктор'
\ No newline at end of file
diff --git a/trainers/tests.py b/trainers/tests.py
deleted file mode 100644
index 7ce503c..0000000
--- a/trainers/tests.py
+++ /dev/null
@@ -1,3 +0,0 @@
-from django.test import TestCase
-
-# Create your tests here.
diff --git a/what_you_get/admin.py b/what_you_get/admin.py
index 70e8e36..ef708d7 100644
--- a/what_you_get/admin.py
+++ b/what_you_get/admin.py
@@ -1,3 +1,5 @@
+# -*- coding: utf-8 -*-
+
 from django.contrib import admin
 from .models import WhatYouGet
 
diff --git a/what_you_get/apps.py b/what_you_get/apps.py
index 0594b08..80e928b 100644
--- a/what_you_get/apps.py
+++ b/what_you_get/apps.py
@@ -1,5 +1,8 @@
+# -*- coding: utf-8 -*-
+
 from django.apps import AppConfig
 
 
 class WhatYouGetConfig(AppConfig):
-    name = 'what_you_get'
+	name = 'what_you_get'
+	verbose_name = u'Блок "что вы получите"'
\ No newline at end of file
diff --git a/what_you_get/models.py b/what_you_get/models.py
index 62593b7..e072c5b 100644
--- a/what_you_get/models.py
+++ b/what_you_get/models.py
@@ -1,18 +1,21 @@
-from __future__ import unicode_literals
+# -*- coding: utf-8 -*-
+
 from django.db import models
 
 def get_uploaded_file_name(instance, filename):
 	return "icons/%s" % filename
 
 class WhatYouGet(models.Model):
-	title = models.CharField(verbose_name="Название", max_length=30)
-	description = models.TextField(verbose_name="Описание", blank=True, null=True)
-	icon = models.ImageField(upload_to=get_uploaded_file_name, verbose_name="Иконка", blank=True, null=True)
-	updated = models.DateTimeField(verbose_name="Данные обновлены", auto_now=True, auto_now_add=False)
-	created = models.DateTimeField(verbose_name="Данные созданы", auto_now=False, auto_now_add=True)
+	title = models.CharField(u"Название", max_length=30)
+	description = models.TextField(u"Описание", blank=True, null=True)
+	icon = models.ImageField(u"Иконка", upload_to=get_uploaded_file_name, blank=True, null=True)
+	updated = models.DateTimeField(u"Данные обновлены", auto_now=True, auto_now_add=False)
+	created = models.DateTimeField(u"Данные созданы", auto_now=False, auto_now_add=True)
 
 	def __str__(self):
 		return self.title
 
 	class Meta:
 		ordering = ['updated', 'created']
+		verbose_name = u'Что вы получите'
+		verbose_name_plural = u'Что вы получите'
\ No newline at end of file
diff --git a/what_you_get/tests.py b/what_you_get/tests.py
deleted file mode 100644
index 7ce503c..0000000
--- a/what_you_get/tests.py
+++ /dev/null
@@ -1,3 +0,0 @@
-from django.test import TestCase
-
-# Create your tests here.
